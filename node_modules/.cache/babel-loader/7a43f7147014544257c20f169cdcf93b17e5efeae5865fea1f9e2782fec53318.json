{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\closedloan\\\\src\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TablePaginationActions({\n  count,\n  page,\n  rowsPerPage,\n  onChangePage\n}) {\n  const handleFirstPageButtonClick = () => {\n    onChangePage(1);\n  };\n\n  // RDT uses page index starting at 1, MUI starts at 0\n  // i.e. page prop will be off by one here\n  const handleBackButtonClick = () => {\n    onChangePage(page);\n  };\n  const handleNextButtonClick = () => {\n    onChangePage(page + 2);\n  };\n  const handleLastPageButtonClick = () => {\n    onChangePage(getNumberOfPages(count, rowsPerPage));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= getNumberOfPages(count, rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= getNumberOfPages(count, rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = TablePaginationActions;\nconst CustomMaterialPagination = ({\n  rowsPerPage,\n  rowCount,\n  onChangePage,\n  onChangeRowsPerPage,\n  currentPage\n}) => /*#__PURE__*/_jsxDEV(TablePagination, {\n  component: \"nav\",\n  count: rowCount,\n  rowsPerPage: rowsPerPage,\n  page: currentPage - 1,\n  onChangePage: onChangePage,\n  onChangeRowsPerPage: ({\n    target\n  }) => onChangeRowsPerPage(Number(target.value)),\n  ActionsComponent: TablePaginationActions\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 5\n}, this);\n_c2 = CustomMaterialPagination;\nexport default CustomMaterialPagination;\nvar _c, _c2;\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"CustomMaterialPagination\");","map":{"version":3,"names":["React","TablePagination","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","TablePaginationActions","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","getNumberOfPages","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","CustomMaterialPagination","rowCount","onChangeRowsPerPage","currentPage","component","target","Number","value","ActionsComponent","_c2","$RefreshReg$"],"sources":["D:/js/closedloan/src/components/Pagination.js"],"sourcesContent":["import React from 'react';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nfunction TablePaginationActions({ count, page, rowsPerPage, onChangePage }) {\r\n    const handleFirstPageButtonClick = () => {\r\n        onChangePage(1);\r\n    };\r\n\r\n    // RDT uses page index starting at 1, MUI starts at 0\r\n    // i.e. page prop will be off by one here\r\n    const handleBackButtonClick = () => {\r\n        onChangePage(page);\r\n    };\r\n\r\n    const handleNextButtonClick = () => {\r\n        onChangePage(page + 2);\r\n    };\r\n\r\n    const handleLastPageButtonClick = () => {\r\n        onChangePage(getNumberOfPages(count, rowsPerPage));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n                <FirstPageIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                <KeyboardArrowLeft />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= getNumberOfPages(count, rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                <KeyboardArrowRight />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= getNumberOfPages(count, rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                <LastPageIcon />\r\n            </IconButton>\r\n        </>\r\n    );\r\n}\r\n\r\nconst CustomMaterialPagination = ({ rowsPerPage, rowCount, onChangePage, onChangeRowsPerPage, currentPage }) => (\r\n    <TablePagination\r\n        component=\"nav\"\r\n        count={rowCount}\r\n        rowsPerPage={rowsPerPage}\r\n        page={currentPage - 1}\r\n        onChangePage={onChangePage}\r\n        onChangeRowsPerPage={({ target }) => onChangeRowsPerPage(Number(target.value))}\r\n        ActionsComponent={TablePaginationActions}\r\n    />\r\n);\r\n\r\nexport default CustomMaterialPagination"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}