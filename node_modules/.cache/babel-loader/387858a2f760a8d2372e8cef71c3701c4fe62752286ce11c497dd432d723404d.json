{"ast":null,"code":"var _jsxFileName = \"D:\\\\js\\\\closedloan\\\\src\\\\components\\\\LoanTable.js\";\nimport React from 'react';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoanTable = props => {\n  console.log(props.loans);\n  const handleRowSelected = row => {\n    console.log(row.selectedRows.map(row => row.LoanAgreementNo));\n  };\n\n  // Check current page has selected items\n\n  const columns = [{\n    name: 'LoanID',\n    selector: row => row.LoanID\n  }, {\n    name: 'FullName',\n    selector: row => row.FullName\n  }, {\n    name: 'CardNumber',\n    selector: row => row.CardNumber\n  }, {\n    name: 'LoanAgreementNo',\n    selector: row => row.LoanAgreementNo\n  }, {\n    name: 'DisburseDate',\n    selector: row => row.DisburseDate\n  }, {\n    name: 'CloseDate',\n    selector: row => row.CloseDate\n  }, {\n    name: 'LoanNode',\n    selector: row => row.LoanNode\n  }, {\n    cell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      id: row.ID,\n      children: \"Action\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this),\n    ignoreRowClick: true,\n    allowOverflow: true,\n    button: true\n  }, {\n    name: 'Status',\n    selector: row => row.Status\n  }];\n  const data = props.loans;\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    columns: columns,\n    data: data,\n    selectableRows: true,\n    onSelectedRowsChange: handleRowSelected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = LoanTable;\nvar _c;\n$RefreshReg$(_c, \"LoanTable\");","map":{"version":3,"names":["React","DataTable","jsxDEV","_jsxDEV","LoanTable","props","console","log","loans","handleRowSelected","row","selectedRows","map","LoanAgreementNo","columns","name","selector","LoanID","FullName","CardNumber","DisburseDate","CloseDate","LoanNode","cell","onClick","clickHandler","id","ID","children","fileName","_jsxFileName","lineNumber","columnNumber","ignoreRowClick","allowOverflow","button","Status","data","selectableRows","onSelectedRowsChange","_c","$RefreshReg$"],"sources":["D:/js/closedloan/src/components/LoanTable.js"],"sourcesContent":["import React from 'react'\r\nimport DataTable from 'react-data-table-component';\r\n\r\nexport const LoanTable = (props) => {\r\n  console.log(props.loans);\r\n  \r\n  \r\n  const handleRowSelected = (row) => {\r\n    console.log(row.selectedRows.map((row)=>\r\n    row.LoanAgreementNo));\r\n    \r\n    \r\n    };\r\n  \r\n    // Check current page has selected items\r\n    \r\n  \r\n  const columns=[\r\n    {\r\n      name: 'LoanID',\r\n      selector: row => row.LoanID,\r\n  },\r\n    {\r\n      name: 'FullName',\r\n      selector: row => row.FullName,\r\n  },\r\n    {\r\n      name: 'CardNumber',\r\n      selector: row => row.CardNumber,\r\n  },\r\n    {\r\n      name: 'LoanAgreementNo',\r\n      selector: row => row.LoanAgreementNo,\r\n  },\r\n    {\r\n      name: 'DisburseDate',\r\n      selector: row => row.DisburseDate,\r\n  },\r\n    {\r\n      name: 'CloseDate',\r\n      selector: row => row.CloseDate,\r\n  },\r\n    {\r\n      name: 'LoanNode',\r\n      selector: row => row.LoanNode,\r\n  },\r\n  {\r\n    cell:(row) => <button onClick={clickHandler} id={row.ID}>Action</button>,\r\n    ignoreRowClick: true,\r\n    allowOverflow: true,\r\n    button: true,\r\n  },\r\n    {\r\n      name: 'Status',\r\n      selector:row=>row.Status,\r\n  },\r\n  ];\r\n\r\n  const data = props.loans\r\n    \r\n\r\n\r\n  return (\r\n\r\n    <DataTable columns={columns} data={data} selectableRows\r\n    onSelectedRowsChange={handleRowSelected} \r\n    \r\n    />\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAClCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,KAAK,CAAC;EAGxB,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;IACjCJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAACC,YAAY,CAACC,GAAG,CAAEF,GAAG,IACrCA,GAAG,CAACG,eAAe,CAAC,CAAC;EAGrB,CAAC;;EAED;;EAGF,MAAMC,OAAO,GAAC,CACZ;IACEC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAEN,GAAG,IAAIA,GAAG,CAACO;EACzB,CAAC,EACC;IACEF,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAEN,GAAG,IAAIA,GAAG,CAACQ;EACzB,CAAC,EACC;IACEH,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAEN,GAAG,IAAIA,GAAG,CAACS;EACzB,CAAC,EACC;IACEJ,IAAI,EAAE,iBAAiB;IACvBC,QAAQ,EAAEN,GAAG,IAAIA,GAAG,CAACG;EACzB,CAAC,EACC;IACEE,IAAI,EAAE,cAAc;IACpBC,QAAQ,EAAEN,GAAG,IAAIA,GAAG,CAACU;EACzB,CAAC,EACC;IACEL,IAAI,EAAE,WAAW;IACjBC,QAAQ,EAAEN,GAAG,IAAIA,GAAG,CAACW;EACzB,CAAC,EACC;IACEN,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAEN,GAAG,IAAIA,GAAG,CAACY;EACzB,CAAC,EACD;IACEC,IAAI,EAAEb,GAAG,iBAAKP,OAAA;MAAQqB,OAAO,EAAEC,YAAa;MAACC,EAAE,EAAEhB,GAAG,CAACiB,EAAG;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;IACxEC,cAAc,EAAE,IAAI;IACpBC,aAAa,EAAE,IAAI;IACnBC,MAAM,EAAE;EACV,CAAC,EACC;IACEpB,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAACN,GAAG,IAAEA,GAAG,CAAC0B;EACtB,CAAC,CACA;EAED,MAAMC,IAAI,GAAGhC,KAAK,CAACG,KAAK;EAIxB,oBAEEL,OAAA,CAACF,SAAS;IAACa,OAAO,EAAEA,OAAQ;IAACuB,IAAI,EAAEA,IAAK;IAACC,cAAc;IACvDC,oBAAoB,EAAE9B;EAAkB;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAEN,CAAC;AAAAQ,EAAA,GAlEYpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}